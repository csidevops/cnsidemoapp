--- 
resources: 
  - 
    repo: self
stages: 
  - 
    displayName: "Build stage"
    jobs: 
      - 
        displayName: Build
        job: Build
        pool: 
          vmImage: $(vmImageName)
        steps: 
          - 
            displayName: "Maven pom.xml"
            inputs: ~
            mavenPomFile: $(Parameters.mavenPOMFile)
            task: Maven@3
    stage: Build
  - 
    condition: succeededOrFailed()
    displayName: "Copy Files to: $(build.artifactstagingdirectory)"
    inputs: 
      Contents: |
          **/*.war
          acr-myhealthcareclinic.yaml
      SourceFolder: $(system.defaultworkingdirectory)
      TargetFolder: $(build.artifactstagingdirectory)
    task: CopyFiles@2
  - 
    condition: succeededOrFailed()
    displayName: "Publish Artifact: drop"
    inputs: 
      PathtoPublish: $(build.artifactstagingdirectory)
    task: PublishBuildArtifacts@1
  - 
    displayName: "Build and push an image to container registry"
    inputs: 
      buildContext: /home/vsts/work/1/a/target/
      command: buildAndPush
      containerRegistry: $(dockerRegistryServiceConnection)
      dockerfile: $(dockerfilePath)
      repository: $(imageRepository)
      tags: "$(tag)\n"
    task: Docker@2
  - 
    artifact: manifests
    upload: manifests
  - 
    dependsOn: Build
    displayName: "Deploy stage"
    jobs: 
      - 
        deployment: Deploy
        displayName: Deploy
        environment: csidevopsjavawebappfoundation.myhealthcareclinic
        pool: 
          vmImage: $(vmImageName)
        strategy: 
          runOnce: 
            deploy: 
              steps: 
                - 
                  displayName: "Create imagePullSecret"
                  inputs: 
                    action: createSecret
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
                    secretName: $(imagePullSecret)
                  task: KubernetesManifest@0
                - 
                  displayName: "Deploy to Kubernetes cluster"
                  inputs: 
                    action: deploy
                    containers: "$(containerRegistry)/$(imageRepository):$(tag)\n"
                    imagePullSecrets: "$(imagePullSecret)\n"
                    manifests: |
                        $(Pipeline.Workspace)/manifests/deployment.yml
                        $(Pipeline.Workspace)/manifests/service.yml
                  task: KubernetesManifest@0
    stage: Deploy
trigger: 
  - master
variables: 
  containerRegistry: devsecopspoccontainer.azurecr.io
  dockerRegistryServiceConnection: 45a991ff-f395-4f4f-9116-c5fd531d53d6
  dockerfilePath: "**/Dockerfile"
  imagePullSecret: devsecopspoccontainerb6a0-auth
  imageRepository: myhealthcareclinic
  tag: $(Build.BuildId)
  vmImageName: ubuntu-latest